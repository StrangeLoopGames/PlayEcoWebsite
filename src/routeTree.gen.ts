/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AccountIndexImport } from './routes/account/index'
import { Route as AccountTwitchCallbackImport } from './routes/account/twitch-callback'
import { Route as AccountAdminImport } from './routes/account/admin'
import { Route as UserConnectionsTwitchImport } from './routes/user.connections.twitch'

// Create Virtual Routes

const VerifyemailLazyImport = createFileRoute('/verifyemail')()
const ResetpasswordLazyImport = createFileRoute('/resetpassword')()
const RegisterLazyImport = createFileRoute('/register')()
const LogoutLazyImport = createFileRoute('/logout')()
const LoginLazyImport = createFileRoute('/login')()
const JobsLazyImport = createFileRoute('/jobs')()
const HostingLazyImport = createFileRoute('/hosting')()
const GameversionsLazyImport = createFileRoute('/gameversions')()
const ForgotLazyImport = createFileRoute('/forgot')()
const BuyLazyImport = createFileRoute('/buy')()
const IndexLazyImport = createFileRoute('/')()
const TwitchIndexLazyImport = createFileRoute('/twitch/')()
const TermsTosLazyImport = createFileRoute('/terms/tos')()
const TermsEulaLazyImport = createFileRoute('/terms/eula')()

// Create/Update Routes

const VerifyemailLazyRoute = VerifyemailLazyImport.update({
  path: '/verifyemail',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/verifyemail.lazy').then((d) => d.Route))

const ResetpasswordLazyRoute = ResetpasswordLazyImport.update({
  path: '/resetpassword',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/resetpassword.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LogoutLazyRoute = LogoutLazyImport.update({
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/logout.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const JobsLazyRoute = JobsLazyImport.update({
  path: '/jobs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/jobs.lazy').then((d) => d.Route))

const HostingLazyRoute = HostingLazyImport.update({
  path: '/hosting',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/hosting.lazy').then((d) => d.Route))

const GameversionsLazyRoute = GameversionsLazyImport.update({
  path: '/gameversions',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/gameversions.lazy').then((d) => d.Route))

const ForgotLazyRoute = ForgotLazyImport.update({
  path: '/forgot',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/forgot.lazy').then((d) => d.Route))

const BuyLazyRoute = BuyLazyImport.update({
  path: '/buy',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/buy.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const TwitchIndexLazyRoute = TwitchIndexLazyImport.update({
  path: '/twitch/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/twitch/index.lazy').then((d) => d.Route))

const AccountIndexRoute = AccountIndexImport.update({
  path: '/account/',
  getParentRoute: () => rootRoute,
} as any)

const TermsTosLazyRoute = TermsTosLazyImport.update({
  path: '/terms/tos',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/terms/tos.lazy').then((d) => d.Route))

const TermsEulaLazyRoute = TermsEulaLazyImport.update({
  path: '/terms/eula',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/terms/eula.lazy').then((d) => d.Route))

const AccountTwitchCallbackRoute = AccountTwitchCallbackImport.update({
  path: '/account/twitch-callback',
  getParentRoute: () => rootRoute,
} as any)

const AccountAdminRoute = AccountAdminImport.update({
  path: '/account/admin',
  getParentRoute: () => rootRoute,
} as any)

const UserConnectionsTwitchRoute = UserConnectionsTwitchImport.update({
  path: '/user/connections/twitch',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/buy': {
      preLoaderRoute: typeof BuyLazyImport
      parentRoute: typeof rootRoute
    }
    '/forgot': {
      preLoaderRoute: typeof ForgotLazyImport
      parentRoute: typeof rootRoute
    }
    '/gameversions': {
      preLoaderRoute: typeof GameversionsLazyImport
      parentRoute: typeof rootRoute
    }
    '/hosting': {
      preLoaderRoute: typeof HostingLazyImport
      parentRoute: typeof rootRoute
    }
    '/jobs': {
      preLoaderRoute: typeof JobsLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      preLoaderRoute: typeof LogoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/resetpassword': {
      preLoaderRoute: typeof ResetpasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/verifyemail': {
      preLoaderRoute: typeof VerifyemailLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/admin': {
      preLoaderRoute: typeof AccountAdminImport
      parentRoute: typeof rootRoute
    }
    '/account/twitch-callback': {
      preLoaderRoute: typeof AccountTwitchCallbackImport
      parentRoute: typeof rootRoute
    }
    '/terms/eula': {
      preLoaderRoute: typeof TermsEulaLazyImport
      parentRoute: typeof rootRoute
    }
    '/terms/tos': {
      preLoaderRoute: typeof TermsTosLazyImport
      parentRoute: typeof rootRoute
    }
    '/account/': {
      preLoaderRoute: typeof AccountIndexImport
      parentRoute: typeof rootRoute
    }
    '/twitch/': {
      preLoaderRoute: typeof TwitchIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/user/connections/twitch': {
      preLoaderRoute: typeof UserConnectionsTwitchImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  BuyLazyRoute,
  ForgotLazyRoute,
  GameversionsLazyRoute,
  HostingLazyRoute,
  JobsLazyRoute,
  LoginLazyRoute,
  LogoutLazyRoute,
  RegisterLazyRoute,
  ResetpasswordLazyRoute,
  VerifyemailLazyRoute,
  AccountAdminRoute,
  AccountTwitchCallbackRoute,
  TermsEulaLazyRoute,
  TermsTosLazyRoute,
  AccountIndexRoute,
  TwitchIndexLazyRoute,
  UserConnectionsTwitchRoute,
])

/* prettier-ignore-end */
